{"version":3,"sources":["../src/datasource.js"],"names":["convertRangeToUserTime","range","intervalMs","userTime","from","Math","trunc","valueOf","to","sampling","max","_","DataService","ApiService","MetricsService","TemplatingService","FormatterService","SysdigDatasource","instanceSettings","$q","backendSrv","templateSrv","name","q","url","access","apiToken","jsonData","headers","Authorization","withCredentials","send","getBackendConfiguration","then","response","status","message","title","options","query","buildQueryParameters","targets","filter","t","hide","length","when","data","fetch","target","map","i","undefined","Object","assign","timeAggregation","groupAggregation","pageLimit","isTabularFormat","targetOptions","segmentBy","sortDirection","isSingleDataPoint","Array","isArray","replaceSingleMatch","scopedVars","replace","Number","parseInt","normOptions","areLabelsIncluded","variable","queryMetrics","result","sort","getLabelValuesSorter","labelValue","text","formatLabelValue","findMetrics","metric","isNumeric","findSegmentations","mode","a","b","localeCompare","toLowerCase"],"mappings":"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","file":"datasource.js","sourcesContent":["//\n//  Copyright 2018 Draios Inc.\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\n//\nimport _ from 'lodash';\nimport DataService from './data_service';\nimport ApiService from './api_service';\nimport MetricsService from './metrics_service';\nimport TemplatingService from './templating_service';\nimport FormatterService from './formatter_service';\n\nexport class SysdigDatasource {\n    constructor(instanceSettings, $q, backendSrv, templateSrv) {\n        this.name = instanceSettings.name;\n        this.q = $q;\n        this.backendSrv = backendSrv;\n        this.templateSrv = templateSrv;\n        this.url = instanceSettings.url;\n        this.access = 'proxy';\n\n        this.apiToken = instanceSettings.jsonData ? instanceSettings.jsonData.apiToken : '';\n        this.headers = {\n            'Content-Type': 'application/json',\n            'X-Sysdig-Product': 'SDC',\n            Authorization: `Bearer ${this.apiToken}`\n        };\n    }\n\n    getBackendConfiguration() {\n        return {\n            backendSrv: this.backendSrv,\n            withCredentials: this.withCredentials,\n            headers: this.headers,\n            apiToken: this.apiToken,\n            url: this.url\n        };\n    }\n\n    testDatasource() {\n        return ApiService.send(this.getBackendConfiguration(), {\n            url: 'api/login'\n        }).then((response) => {\n            if (response.status === 200) {\n                return { status: 'success', message: 'Data source is working', title: 'Success' };\n            }\n        });\n    }\n\n    query(options) {\n        const query = this.buildQueryParameters(options);\n        query.targets = query.targets.filter((t) => !t.hide);\n\n        if (query.targets.length <= 0) {\n            return this.q.when({ data: [] });\n        }\n\n        return DataService.fetch(\n            this.getBackendConfiguration(),\n            query,\n            convertRangeToUserTime(options.range, query.intervalMs)\n        );\n    }\n\n    buildQueryParameters(options) {\n        //remove placeholder targets\n        options.targets = _.filter(options.targets, (target) => {\n            return target.target !== 'select metric';\n        });\n\n        const targets = _.map(options.targets, (target, i, targets) => {\n            if (target.target === undefined) {\n                // here's the query control panel sending the first request with empty configuration\n                return Object.assign({}, target, {\n                    target: 'net.bytes.total',\n                    timeAggregation: 'timeAvg',\n                    groupAggregation: 'avg',\n                    filter: undefined,\n                    pageLimit: 10\n                });\n            } else {\n                const isTabularFormat = targets[0].isTabularFormat;\n                const targetOptions = {\n                    segmentBy: isTabularFormat === false ? target.segmentBy : targets[0].segmentBy,\n                    filter: isTabularFormat === false ? target.filter : targets[0].filter,\n\n                    // pagination configuration is set for first target only\n                    pageLimit: targets[0].pageLimit,\n                    sortDirection: targets[0].sortDirection,\n\n                    // \"single data point\" configuration is set for first target only\n                    isSingleDataPoint: isTabularFormat || targets[0].isSingleDataPoint\n                };\n\n                if (targetOptions.segmentBy && Array.isArray(targetOptions.segmentBy) === false) {\n                    // backwards compatibility: up to v0.3 one segmentation was supported only\n                    targetOptions.segmentBy = [targetOptions.segmentBy];\n                }\n\n                return Object.assign({}, target, targetOptions, {\n                    target: TemplatingService.replaceSingleMatch(\n                        this.templateSrv,\n                        target.target,\n                        options.scopedVars\n                    ),\n                    segmentBy: targetOptions.segmentBy\n                        ? targetOptions.segmentBy.map((segmentBy) =>\n                              TemplatingService.replaceSingleMatch(\n                                  this.templateSrv,\n                                  segmentBy,\n                                  options.scopedVars\n                              )\n                          )\n                        : null,\n                    filter: TemplatingService.replace(\n                        this.templateSrv,\n                        targetOptions.filter,\n                        options.scopedVars\n                    ),\n\n                    pageLimit: Number.parseInt(targetOptions.pageLimit) || 10\n                });\n            }\n        });\n\n        options.targets = targets;\n\n        return options;\n    }\n\n    metricFindQuery(query, options) {\n        const normOptions = Object.assign(\n            { areLabelsIncluded: false, range: null, variable: null },\n            options\n        );\n\n        if (query) {\n            return MetricsService.queryMetrics(\n                this.getBackendConfiguration(),\n                this.templateSrv,\n                query,\n                { userTime: convertRangeToUserTime(normOptions.range) }\n            ).then((result) =>\n                result\n                    .sort(this.getLabelValuesSorter(normOptions.variable.sort))\n                    .map((labelValue) => ({\n                        text: FormatterService.formatLabelValue(labelValue)\n                    }))\n            );\n        } else {\n            return (\n                MetricsService.findMetrics(this.getBackendConfiguration())\n                    // filter out all tags/labels/other string metrics\n                    .then((result) => {\n                        if (normOptions.areLabelsIncluded) {\n                            return result;\n                        } else {\n                            return result.filter((metric) => metric.isNumeric);\n                        }\n                    })\n            );\n        }\n    }\n\n    findSegmentBy(target) {\n        if (target === undefined || target === 'select metric') {\n            return MetricsService.findSegmentations(this.getBackendConfiguration(), null);\n        } else {\n            return MetricsService.findSegmentations(\n                this.getBackendConfiguration(),\n                TemplatingService.replaceSingleMatch(this.templateSrv, target)\n            );\n        }\n    }\n\n    getLabelValuesSorter(mode) {\n        switch (mode) {\n            case 0: // disabled\n            case 1: // alphabetical (asc)\n                return (a, b) => {\n                    if (a === null) return -1;\n                    else if (b === null) return 1;\n                    else return a.localeCompare(b);\n                };\n\n            case 3: // numerical (asc)\n                return (a, b) => {\n                    if (a === null) return -1;\n                    else if (b === null) return 1;\n                    else return a - b;\n                };\n\n            case 2: // alphabetical (desc)\n                return (a, b) => {\n                    if (a === null) return -1;\n                    else if (b === null) return 1;\n                    else return a.localeCompare(b);\n                };\n\n            case 4: // numerical (desc)\n                return (a, b) => {\n                    if (a === null) return -1;\n                    else if (b === null) return 1;\n                    else return a - b;\n                };\n\n            case 5: // alphabetical, case insensitive (asc)\n                return (a, b) => {\n                    if (a === null) return -1;\n                    else if (b === null) return 1;\n                    else return a.localeCompare(b);\n                };\n\n            case 6: // alphabetical, case insensitive (desc)\n                return (a, b) => {\n                    if (a === null) return -1;\n                    else if (b === null) return 1;\n                    else return a.toLowerCase().localeCompare(b.toLowerCase());\n                };\n        }\n    }\n\n    annotationQuery() {\n        // const query = this.templateSrv.replace(options.annotation.query, {}, 'glob');\n        // const annotationQuery = {\n        //     range: options.range,\n        //     annotation: {\n        //         name: options.annotation.name,\n        //         datasource: options.annotation.datasource,\n        //         enable: options.annotation.enable,\n        //         iconColor: options.annotation.iconColor,\n        //         query: query\n        //     },\n        //     rangeRaw: options.rangeRaw\n        // };\n\n        // TODO Not supported yet\n        return this.q.when([]);\n    }\n\n    doRequest(options) {\n        return ApiService.send(this.getBackendConfiguration(), options);\n    }\n}\n\nfunction convertRangeToUserTime(range, intervalMs) {\n    if (range) {\n        const userTime = {\n            from: Math.trunc(range.from.valueOf() / 1000),\n            to: Math.trunc(range.to.valueOf() / 1000)\n        };\n\n        if (intervalMs) {\n            userTime.sampling = Math.max(Math.trunc(intervalMs / 1000), 1);\n        }\n\n        return userTime;\n    } else {\n        return null;\n    }\n}\n"]}