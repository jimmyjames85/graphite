{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","SysdigDatasourceQueryCtrl","$scope","$injector","scope","target","timeAggregation","groupAggregation","segmentBy","Array","isArray","sortDirection","pageLimit","isTabularFormat","panel","type","segmentByItems","calculateSegmentByItems","targets","indexOf","parseMetric","options","areLabelsIncluded","m","text","id","value","isNumeric","datasource","metricFindQuery","then","data","map","filter","getAggregationOptions","d","aggregations","groupAggregations","findSegmentBy","k","item","index","slice","panelCtrl","refresh","isFirst","canAdd","isFirstTarget","length","i","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeSA,qB,kBAAAA,S;;;;;;;;;;;;;;;;;;;;;iDAGIC,yB;;;AACT,mDAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA,sKACrBD,MADqB,EACbC,SADa;;AAG3B,0BAAKC,KAAL,GAAaF,MAAb;AACA,0BAAKG,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAZ,IAAsB,iBAA3C;AACA,0BAAKA,MAAL,CAAYC,eAAZ,GAA8B,MAAKD,MAAL,CAAYC,eAAZ,IAA+B,SAA7D;AACA,0BAAKD,MAAL,CAAYE,gBAAZ,GAA+B,MAAKF,MAAL,CAAYE,gBAAZ,IAAgC,KAA/D;;AAEA,wBAAI,MAAKF,MAAL,CAAYG,SAAhB,EAA2B;AACvB,4BAAIC,MAAMC,OAAN,CAAc,MAAKL,MAAL,CAAYG,SAA1B,MAAyC,KAA7C,EAAoD;AAChD,kCAAKH,MAAL,CAAYG,SAAZ,GAAwB,CAAC,MAAKH,MAAL,CAAYG,SAAb,CAAxB;AACH;AACJ,qBAJD,MAIO;AACH,8BAAKH,MAAL,CAAYG,SAAZ,GAAwB,EAAxB;AACH;;AAED,0BAAKH,MAAL,CAAYM,aAAZ,GAA4B,MAAKN,MAAL,CAAYM,aAAZ,IAA6B,MAAzD;AACA,0BAAKN,MAAL,CAAYO,SAAZ,GAAwB,MAAKP,MAAL,CAAYO,SAAZ,IAAyB,EAAjD;;AAEA;AACA,0BAAKP,MAAL,CAAYQ,eAAZ,GAA8B,MAAKC,KAAL,CAAWC,IAAX,KAAoB,OAAlD;;AAEA,0BAAKC,cAAL,GAAsB,MAAKC,uBAAL,EAAtB;AAtB2B;AAuB9B;;;;oDAEe;AACZ,+BAAO,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,OAAnB,CAA2B,KAAKd,MAAhC,MAA4C,CAAnD;AACH;;;uDAEkB;AACf,4BAAIe,oBAAJ;AACA,4BAAIC,UAAU;AACVC,+CAAmB,KAAKR,KAAL,CAAWC,IAAX,KAAoB;AAD7B,yBAAd;;AAIA,4BAAI,KAAKD,KAAL,CAAWC,IAAX,KAAoB,OAAxB,EAAiC;AAC7BK,0CAAc,qBAACG,CAAD;AAAA,uCAAQ,EAAEC,MAAMD,EAAEE,EAAV,EAAcC,OAAOH,EAAEE,EAAvB,EAAR;AAAA,6BAAd;AACH,yBAFD,MAEO;AACHL,0CAAc,qBAACG,CAAD,EAAO;AACjB,oCAAIA,EAAEI,SAAN,EAAiB;AACb,2CAAO,EAAEH,eAAaD,EAAEE,EAAjB,EAAuBC,OAAOH,EAAEE,EAAhC,EAAP;AACH,iCAFD,MAEO;AACH,2CAAO,EAAED,eAAaD,EAAEE,EAAjB,EAAuBC,OAAOH,EAAEE,EAAhC,EAAP;AACH;AACJ,6BAND;AAOH;;AAED,+BAAO,KAAKG,UAAL,CAAgBC,eAAhB,CAAgC,IAAhC,EAAsCR,OAAtC,EAA+CS,IAA/C,CAAoD,UAACC,IAAD,EAAU;AACjE,mCAAOA,KAAKC,GAAL,CAASZ,WAAT,CAAP;AACH,yBAFM,CAAP;AAGH;;;4DAEuB;AAAA;;AACpB,4BAAIC,UAAU;AACVC,+CAAmB,KAAKR,KAAL,CAAWC,IAAX,KAAoB;AAD7B,yBAAd;;AAIA,+BAAO,KAAKa,UAAL,CAAgBC,eAAhB,CAAgC,IAAhC,EAAsCR,OAAtC,EAA+CS,IAA/C,CAAoD,UAACC,IAAD,EAAU;AACjE,mCAAOA,KAAKE,MAAL,CAAY,UAACV,CAAD;AAAA,uCAAOA,EAAEE,EAAF,KAAS,OAAKpB,MAAL,CAAYA,MAA5B;AAAA,6BAAZ,EAAgD,CAAhD,CAAP;AACH,yBAFM,CAAP;AAGH;;;gEAE2B;AACxB,4BAAMgB,UAAU,CACZ,EAAEK,OAAO,KAAT,EAAgBF,MAAM,SAAtB,EADY,EAEZ,EAAEE,OAAO,SAAT,EAAoBF,MAAM,MAA1B,EAFY,EAGZ,EAAEE,OAAO,KAAT,EAAgBF,MAAM,KAAtB,EAHY,EAIZ,EAAEE,OAAO,KAAT,EAAgBF,MAAM,KAAtB,EAJY,EAKZ,EAAEE,OAAO,KAAT,EAAgBF,MAAM,KAAtB,EALY,EAMZ,EAAEE,OAAO,OAAT,EAAkBF,MAAM,OAAxB,EANY,EAOZ,EAAEE,OAAO,QAAT,EAAmBF,MAAM,QAAzB,EAPY,EAQZ,EAAEE,OAAO,UAAT,EAAqBF,MAAM,UAA3B,EARY,CAAhB;;AAWA,+BAAO,KAAKU,qBAAL,GAA6BJ,IAA7B,CAAkC,UAACP,CAAD,EAAO;AAC5C,gCAAIA,CAAJ,EAAO;AACH,uCAAOF,QAAQY,MAAR,CAAe,UAACE,CAAD;AAAA,2CAAOZ,EAAEa,YAAF,CAAejB,OAAf,CAAuBgB,EAAET,KAAzB,KAAmC,CAA1C;AAAA,iCAAf,CAAP;AACH,6BAFD,MAEO;AACH,uCAAO,EAAP;AACH;AACJ,yBANM,CAAP;AAOH;;;iEAE4B;AACzB,4BAAML,UAAU,CACZ,EAAEK,OAAO,KAAT,EAAgBF,MAAM,SAAtB,EADY,EAEZ,EAAEE,OAAO,KAAT,EAAgBF,MAAM,KAAtB,EAFY,EAGZ,EAAEE,OAAO,KAAT,EAAgBF,MAAM,KAAtB,EAHY,EAIZ,EAAEE,OAAO,KAAT,EAAgBF,MAAM,KAAtB,EAJY,EAKZ,EAAEE,OAAO,OAAT,EAAkBF,MAAM,OAAxB,EALY,EAMZ,EAAEE,OAAO,QAAT,EAAmBF,MAAM,QAAzB,EANY,EAOZ,EAAEE,OAAO,UAAT,EAAqBF,MAAM,UAA3B,EAPY,CAAhB;;AAUA,+BAAO,KAAKU,qBAAL,GAA6BJ,IAA7B,CAAkC,UAACP,CAAD,EAAO;AAC5C,gCAAIA,CAAJ,EAAO;AACH,uCAAOF,QAAQY,MAAR,CAAe,UAACE,CAAD;AAAA,2CAAOZ,EAAEc,iBAAF,CAAoBlB,OAApB,CAA4BgB,EAAET,KAA9B,KAAwC,CAA/C;AAAA,iCAAf,CAAP;AACH,6BAFD,MAEO;AACH,uCAAO,EAAP;AACH;AACJ,yBANM,CAAP;AAOH;;;8DAEyB;AACtB,+BAAO,CAAC,EAAEA,OAAO,MAAT,EAAiBF,MAAM,KAAvB,EAAD,EAAiC,EAAEE,OAAO,KAAT,EAAgBF,MAAM,QAAtB,EAAjC,CAAP;AACH;;;0DAEqB;AAClB,+BAAO,KAAKI,UAAL,CAAgBU,aAAhB,CAA8B,KAAKjC,MAAL,CAAYA,MAA1C,EAAkDyB,IAAlD,CAAuD,UAACC,IAAD,EAAU;AACpE,oCACI,EAAEP,MAAM,iBAAR,EAA2BE,OAAO,IAAlC,EADJ,4BAEOK,KAAKC,GAAL,CAAS,UAACO,CAAD;AAAA,uCAAQ,EAAEf,MAAMe,CAAR,EAAWb,OAAOa,CAAlB,EAAR;AAAA,6BAAT,CAFP;AAIH,yBALM,CAAP;AAMH;;;oDAEeC,I,EAAM;AAClB,4BAAMC,QAAQ,KAAKzB,cAAL,CAAoBG,OAApB,CAA4BqB,IAA5B,CAAd;;AAEA;AACA,6BAAKnC,MAAL,CAAYG,SAAZ,gCACO,KAAKH,MAAL,CAAYG,SAAZ,CAAsBkC,KAAtB,CAA4B,CAA5B,EAA+BD,KAA/B,CADP,sBAEO,KAAKpC,MAAL,CAAYG,SAAZ,CAAsBkC,KAAtB,CAA4BD,QAAQ,CAApC,CAFP;;AAKA;AACA,6BAAKzB,cAAL,GAAsB,KAAKC,uBAAL,EAAtB;;AAEA;AACA,6BAAK0B,SAAL,CAAeC,OAAf;AACH;;;iDAEYJ,I,EAAM;AACf,4BAAMC,QAAQ,KAAKzB,cAAL,CAAoBG,OAApB,CAA4BqB,IAA5B,CAAd;;AAEA;AACA,6BAAKxB,cAAL,gCACO,KAAKA,cAAL,CAAoB0B,KAApB,CAA0B,CAA1B,EAA6BD,QAAQ,CAArC,CADP,IAEI;AACII,qCAAS,KADb;AAEIC,oCAAQ,IAFZ;AAGItC,uCAAW;AAHf,yBAFJ,sBAOO,KAAKQ,cAAL,CAAoB0B,KAApB,CAA0BD,QAAQ,CAAlC,CAPP;;AAUA;AACH;;;wDAEmB;AAChB,6BAAKE,SAAL,CAAeC,OAAf;;AAEA,6BAAKvC,MAAL,CAAYG,SAAZ,GAAwB,KAAKQ,cAAL,CACnBiB,MADmB,CACZ,UAACO,IAAD;AAAA,mCAAUA,KAAKhC,SAAL,KAAmB,IAA7B;AAAA,yBADY,EAEnBwB,GAFmB,CAEf,UAACQ,IAAD;AAAA,mCAAUA,KAAKhC,SAAf;AAAA,yBAFe,CAAxB;;AAIA,6BAAKQ,cAAL,GAAsB,KAAKC,uBAAL,EAAtB;AACH;;;8DAEyB;AAAA;;AACtB,4BAAI,KAAKH,KAAL,CAAWC,IAAX,KAAoB,OAApB,IAA+B,KAAKgC,aAAL,EAAnC,EAAyD;AACrD,gCAAI,KAAK1C,MAAL,CAAYG,SAAZ,CAAsBwC,MAAtB,KAAiC,CAArC,EAAwC;AACpC,uCAAO,CACH;AACIH,6CAAS,IADb;AAEIC,4CAAQ,KAFZ;AAGItC,+CAAW;AAHf,iCADG,CAAP;AAOH,6BARD,MAQO;AACH,uCAAO,KAAKH,MAAL,CAAYG,SAAZ,CAAsBwB,GAAtB,CAA0B,UAACxB,SAAD,EAAYyC,CAAZ;AAAA,2CAAmB;AAChDJ,iDAASI,MAAM,CADiC;AAEhDH,gDAAQG,MAAM,OAAK5C,MAAL,CAAYG,SAAZ,CAAsBwC,MAAtB,GAA+B,CAFG;AAGhDxC;AAHgD,qCAAnB;AAAA,iCAA1B,CAAP;AAKH;AACJ,yBAhBD,MAgBO;AACH,mCAAO,EAAP;AACH;AACJ;;;uDAEkB;AACf;AACH;;;;cAxL0CR,S;;;;AA2L/CC,sCAA0BiD,WAA1B,GAAwC,4BAAxC","file":"query_ctrl.js","sourcesContent":["//\n//  Copyright 2018 Draios Inc.\n//\n//  Licensed under the Apache License, Version 2.0 (the \"License\");\n//  you may not use this file except in compliance with the License.\n//  You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n//  Unless required by applicable law or agreed to in writing, software\n//  distributed under the License is distributed on an \"AS IS\" BASIS,\n//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//  See the License for the specific language governing permissions and\n//  limitations under the License.\n//\nimport { QueryCtrl } from 'app/plugins/sdk';\nimport './css/query-editor.css!';\n\nexport class SysdigDatasourceQueryCtrl extends QueryCtrl {\n    constructor($scope, $injector) {\n        super($scope, $injector);\n\n        this.scope = $scope;\n        this.target.target = this.target.target || 'net.bytes.total';\n        this.target.timeAggregation = this.target.timeAggregation || 'timeAvg';\n        this.target.groupAggregation = this.target.groupAggregation || 'avg';\n\n        if (this.target.segmentBy) {\n            if (Array.isArray(this.target.segmentBy) === false) {\n                this.target.segmentBy = [this.target.segmentBy];\n            }\n        } else {\n            this.target.segmentBy = [];\n        }\n\n        this.target.sortDirection = this.target.sortDirection || 'desc';\n        this.target.pageLimit = this.target.pageLimit || 10;\n\n        // enforce tabular format to be applied when the panel type is a table\n        this.target.isTabularFormat = this.panel.type === 'table';\n\n        this.segmentByItems = this.calculateSegmentByItems();\n    }\n\n    isFirstTarget() {\n        return this.panel.targets.indexOf(this.target) === 0;\n    }\n\n    getMetricOptions() {\n        let parseMetric;\n        let options = {\n            areLabelsIncluded: this.panel.type === 'table'\n        };\n\n        if (this.panel.type !== 'table') {\n            parseMetric = (m) => ({ text: m.id, value: m.id });\n        } else {\n            parseMetric = (m) => {\n                if (m.isNumeric) {\n                    return { text: `(#) ${m.id}`, value: m.id };\n                } else {\n                    return { text: `(A) ${m.id}`, value: m.id };\n                }\n            };\n        }\n\n        return this.datasource.metricFindQuery(null, options).then((data) => {\n            return data.map(parseMetric);\n        });\n    }\n\n    getAggregationOptions() {\n        let options = {\n            areLabelsIncluded: this.panel.type === 'table'\n        };\n\n        return this.datasource.metricFindQuery(null, options).then((data) => {\n            return data.filter((m) => m.id === this.target.target)[0];\n        });\n    }\n\n    getTimeAggregationOptions() {\n        const options = [\n            { value: 'avg', text: 'Average' },\n            { value: 'timeAvg', text: 'Rate' },\n            { value: 'sum', text: 'Sum' },\n            { value: 'min', text: 'Min' },\n            { value: 'max', text: 'Max' },\n            { value: 'count', text: 'Count' },\n            { value: 'concat', text: 'Concat' },\n            { value: 'distinct', text: 'Distinct' }\n        ];\n\n        return this.getAggregationOptions().then((m) => {\n            if (m) {\n                return options.filter((d) => m.aggregations.indexOf(d.value) >= 0);\n            } else {\n                return [];\n            }\n        });\n    }\n\n    getGroupAggregationOptions() {\n        const options = [\n            { value: 'avg', text: 'Average' },\n            { value: 'sum', text: 'Sum' },\n            { value: 'min', text: 'Min' },\n            { value: 'max', text: 'Max' },\n            { value: 'count', text: 'Count' },\n            { value: 'concat', text: 'Concat' },\n            { value: 'distinct', text: 'Distinct' }\n        ];\n\n        return this.getAggregationOptions().then((m) => {\n            if (m) {\n                return options.filter((d) => m.groupAggregations.indexOf(d.value) >= 0);\n            } else {\n                return [];\n            }\n        });\n    }\n\n    getSortDirectionOptions() {\n        return [{ value: 'desc', text: 'Top' }, { value: 'asc', text: 'Bottom' }];\n    }\n\n    getSegmentByOptions() {\n        return this.datasource.findSegmentBy(this.target.target).then((data) => {\n            return [\n                { text: 'no segmentation', value: null },\n                ...data.map((k) => ({ text: k, value: k }))\n            ];\n        });\n    }\n\n    removeSegmentBy(item) {\n        const index = this.segmentByItems.indexOf(item);\n\n        // remove segmentation from list\n        this.target.segmentBy = [\n            ...this.target.segmentBy.slice(0, index),\n            ...this.target.segmentBy.slice(index + 1)\n        ];\n\n        // update UI list\n        this.segmentByItems = this.calculateSegmentByItems();\n\n        // update data\n        this.panelCtrl.refresh();\n    }\n\n    addSegmentBy(item) {\n        const index = this.segmentByItems.indexOf(item);\n\n        // add new item after the one where + has been clicked\n        this.segmentByItems = [\n            ...this.segmentByItems.slice(0, index + 1),\n            {\n                isFirst: false,\n                canAdd: true,\n                segmentBy: null\n            },\n            ...this.segmentByItems.slice(index + 1)\n        ];\n\n        // don't update the UI: the change is temporary until the user picks a segmentation\n    }\n\n    onChangeParameter() {\n        this.panelCtrl.refresh();\n\n        this.target.segmentBy = this.segmentByItems\n            .filter((item) => item.segmentBy !== null)\n            .map((item) => item.segmentBy);\n\n        this.segmentByItems = this.calculateSegmentByItems();\n    }\n\n    calculateSegmentByItems() {\n        if (this.panel.type !== 'table' || this.isFirstTarget()) {\n            if (this.target.segmentBy.length === 0) {\n                return [\n                    {\n                        isFirst: true,\n                        canAdd: false,\n                        segmentBy: null\n                    }\n                ];\n            } else {\n                return this.target.segmentBy.map((segmentBy, i) => ({\n                    isFirst: i === 0,\n                    canAdd: i === this.target.segmentBy.length - 1,\n                    segmentBy\n                }));\n            }\n        } else {\n            return [];\n        }\n    }\n\n    toggleEditorMode() {\n        // noop\n    }\n}\n\nSysdigDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\n"]}